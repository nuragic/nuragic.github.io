{"version":3,"sources":["../node_modules/hyperhtml/esm/shared/constants.js","../node_modules/hyperhtml/esm/shared/poorlyfills.js","../node_modules/hyperhtml/esm/classes/Component.js","../node_modules/hyperhtml/esm/objects/Intent.js","../node_modules/hyperhtml/esm/shared/easy-dom.js","../node_modules/hyperhtml/esm/shared/re.js","../node_modules/hyperhtml/esm/shared/features-detection.js","../node_modules/hyperhtml/esm/shared/utils.js","../node_modules/hyperhtml/esm/classes/Wire.js","../node_modules/hyperhtml/esm/objects/Path.js","../node_modules/hyperhtml/esm/objects/Style.js","../node_modules/hyperhtml/esm/3rd/utils.js","../node_modules/hyperhtml/esm/3rd/domdiff.js","../node_modules/hyperhtml/esm/objects/Updates.js","../node_modules/hyperhtml/esm/hyper/render.js","../node_modules/hyperhtml/esm/hyper/wire.js","../node_modules/hyperhtml/esm/index.js","components.js","data.js","index.js"],"names":["G","document","defaultView","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","COMMENT_NODE","DOCUMENT_FRAGMENT_NODE","VOID_ELEMENTS","OWNER_SVG_ELEMENT","SVG_NAMESPACE","CONNECTED","DISCONNECTED","EXPANDO","SHOULD_USE_TEXT_CONTENT","UID","Math","random","Date","UIDC","Event","o_O","type","e","createEvent","initEvent","Map","keys","values","get","obj","indexOf","set","value","push","ID","WeakMap","key","Object","defineProperty","configurable","WeakSet","wm","add","has","isArray","Array","toString","arr","call","trim","replace","Component","setup","content","children","create","relate","Class","info","relation","w","p","defineProperties","for","context","id","component","createEntry","sm","prototype","handleEvent","ct","currentTarget","getAttribute","html","lazyGetter","svg","state","defaultState","dispatch","detail","_wire$","event","CustomEvent","bubbles","cancelable","dispatchEvent","childNodes","setState","render","target","source","fn","secret","setValue","self","apply","arguments","attributes","intents","hasOwnProperty","length","define","intent","callback","invoke","object","i","node","doc","createElement","ownerDocument","fragment","createDocumentFragment","text","createTextNode","spaces","almostEverything","attrName","tagName","attrPartials","attrSeeker","RegExp","selfClosing","testFragment","hasAppend","hasContent","appendChild","hasDoomedCloneNode","cloneNode","hasImportNode","append","findAttributes","comments","$0","$1","$2","$3","replaceAttributes","createFragment","SVGFragment","HTMLFragment","clone","getChildren","nodeType","importNode","slice","unique","template","TL","t","propertyIsEnumerable","isFrozen","raw","test","navigator","userAgent","parseFloat","T","k","join","TemplateMap","freeze","container","innerHTML","selector","querySelectorAll","createElementNS","firstChild","Wire","first","last","insert","df","remove","parentNode","removeChild","range","createRange","setStartBefore","setEndAfter","deleteContents","createPath","path","prepend","ownerElement","parent","unshift","name","find","IS_NON_DIMENSIONAL","original","isSVG","style","update","setAttributeNode","oldType","oldValue","newValue","cssText","styleValue","setProperty","toStyle","hyphen","ized","toLowerCase","css","start","end","before","insertBefore","eqeq","a","b","identity","O","moreNodes","moreStart","moreEnd","lessNodes","lessStart","lessEnd","compare","m","l","isReversed","futureNodes","futureEnd","currentNodes","currentStart","currentEnd","next","list","nextSibling","DELETION","INSERTION","SKIP","SKIP_OND","Rel","v","HS","futureStart","futureChanges","currentChanges","minLen","link","tresh","keymap","idxInOld","findK","newi","oldi","prev","diff","ptr","OND","rows","cols","d","r","c","pv","cv","pd","outer","diffIdx","applyDiff","currentLength","live","currentIndex","ktr","j","lo","hi","mid","smartDiff","domdiff","options","currentSame","futureSame","components","Cache","asHTML","asNode","item","constructor","canDiff","root","paths","updates","Path","setAnyContent","setAttribute","setTextContent","textContent","parts","child","shift","nodeName","cache","array","attribute","realName","len","removeAttribute","removeAttributeNode","script","replaceChild","invokeAtDistance","placeholder","Promise","resolve","then","String","any","Intent","isPromise_ish","readOnly","diffOptions","fastPath","anyContent","concat","all","notObserving","observe","removeEventListener","addEventListener","owner","dispatchAll","nodes","dispatchTarget","MutationObserver","records","record","removedNodes","addedNodes","subtree","childList","bewitched","templates","wicked","upgrade","createTemplate","Updates","SC_RE","SC_PLACE","wire","wires","weakly","statics","bind","wireContent","wireNodes","hyper","HTML","Page","data","header","experience","languages","links","skillsetURL","hyperHTML","Header","Experience","Skillset","Languages","Links","head","avatar","map","position","company","period","duration","location","description","skillsetRaw","fetch","response","body","getReader","read","result","decoder","TextDecoder","decode","Uint8Array","stream","done","split","skills","skill","href","title","getDuration","totalMonths","floor","months","years","rootElement","getElementById","page"],"mappings":"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","file":"src.841bc806.map","sourceRoot":"../src","sourcesContent":["export const G = document.defaultView;\n\n// Node.CONSTANTS\n// 'cause some engine has no global Node defined\n// (i.e. Node, NativeScript, basicHTML ... )\nexport const ELEMENT_NODE = 1;\nexport const ATTRIBUTE_NODE = 2;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_FRAGMENT_NODE = 11;\n\n// HTML related constants\nexport const VOID_ELEMENTS = /^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i;\n\n// SVG related constants\nexport const OWNER_SVG_ELEMENT = 'ownerSVGElement';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\n// Custom Elements / MutationObserver constants\nexport const CONNECTED = 'connected';\nexport const DISCONNECTED = 'dis' + CONNECTED;\n\n// hyperHTML related constants\nexport const EXPANDO = '_hyper: ';\nexport const SHOULD_USE_TEXT_CONTENT = /^(?:style|textarea)$/i;\nexport const UID = EXPANDO + ((Math.random() * new Date) | 0) + ';';\nexport const UIDC = '<!--' + UID + '-->';\n","import {G, UID} from './constants.js';\n\n// you know that kind of basics you need to cover\n// your use case only but you don't want to bloat the library?\n// There's even a package in here:\n// https://www.npmjs.com/package/poorlyfills\n\n// used to dispatch simple events\nlet Event = G.Event;\ntry {\n  new Event('Event');\n} catch(o_O) {\n  Event = function (type) {\n    const e = document.createEvent('Event');\n    e.initEvent(type, false, false);\n    return e;\n  };\n}\nexport {Event};\n\n// used to store template literals\n/* istanbul ignore next */\nexport const Map = G.Map || function Map() {\n  const keys = [], values = [];\n  return {\n    get(obj) {\n      return values[keys.indexOf(obj)];\n    },\n    set(obj, value) {\n      values[keys.push(obj) - 1] = value;\n    }\n  };\n};\n\n// used to store wired content\nlet ID = 0;\nexport const WeakMap = G.WeakMap || function WeakMap() {\n  const key = UID + ID++;\n  return {\n    get(obj) { return obj[key]; },\n    set(obj, value) {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        value\n      });\n    }\n  };\n};\n\n// used to store hyper.Components\nexport const WeakSet = G.WeakSet || function WeakSet() {\n  const wm = new WeakMap;\n  return {\n    add(obj) { wm.set(obj, true); },\n    has(obj) { return wm.get(obj) === true; }\n  };\n};\n\n// used to be sure IE9 or older Androids work as expected\nexport const isArray = Array.isArray || (toString =>\n  arr => toString.call(arr) === '[object Array]'\n)({}.toString);\n\nexport const trim = UID.trim || function () {\n  return this.replace(/^\\s+|\\s+$/g, '');\n};\n","import { Map, WeakMap } from '../shared/poorlyfills.js';\n\n// hyperHTML.Component is a very basic class\n// able to create Custom Elements like components\n// including the ability to listen to connect/disconnect\n// events via onconnect/ondisconnect attributes\n// Components can be created imperatively or declaratively.\n// The main difference is that declared components\n// will not automatically render on setState(...)\n// to simplify state handling on render.\nexport default function Component() {\n  return this; // this is needed in Edge !!!\n}\n\n// Component is lazily setup because it needs\n// wire mechanism as lazy content\nexport function setup(content) {\n  // there are various weakly referenced variables in here\n  // and mostly are to use Component.for(...) static method.\n  const children = new WeakMap;\n  const create = Object.create;\n  const createEntry = (wm, id, component) => {\n    wm.set(id, component);\n    return component;\n  };\n  const get = (Class, info, context, id) => {\n    const relation = info.get(Class) || relate(Class, info);\n    switch (typeof id) {\n      case 'object':\n      case 'function':\n        const wm = relation.w || (relation.w = new WeakMap);\n        return wm.get(id) || createEntry(wm, id, new Class(context));\n      default:\n        const sm = relation.p || (relation.p = create(null));\n        return sm[id] || (sm[id] = new Class(context));\n    }\n  };\n  const relate = (Class, info) => {\n    const relation = {w: null, p: null};\n    info.set(Class, relation);\n    return relation;\n  };\n  const set = context => {\n    const info = new Map;\n    children.set(context, info);\n    return info;\n  };\n  // The Component Class\n  Object.defineProperties(\n    Component,\n    {\n      // Component.for(context[, id]) is a convenient way\n      // to automatically relate data/context to children components\n      // If not created yet, the new Component(context) is weakly stored\n      // and after that same instance would always be returned.\n      for: {\n        configurable: true,\n        value(context, id) {\n          return get(\n            this,\n            children.get(context) || set(context),\n            context,\n            id == null ?\n              'default' : id\n          );\n        }\n      }\n    }\n  );\n  Object.defineProperties(\n    Component.prototype,\n    {\n      // all events are handled with the component as context\n      handleEvent: {value(e) {\n        const ct = e.currentTarget;\n        this[\n          ('getAttribute' in ct && ct.getAttribute('data-call')) ||\n          ('on' + e.type)\n        ](e);\n      }},\n      // components will lazily define html or svg properties\n      // as soon as these are invoked within the .render() method\n      // Such render() method is not provided by the base class\n      // but it must be available through the Component extend.\n      // Declared components could implement a\n      // render(props) method too and use props as needed.\n      html: lazyGetter('html', content),\n      svg: lazyGetter('svg', content),\n      // the state is a very basic/simple mechanism inspired by Preact\n      state: lazyGetter('state', function () { return this.defaultState; }),\n      // it is possible to define a default state that'd be always an object otherwise\n      defaultState: {get() { return {}; }},\n      // dispatch a bubbling, cancelable, custom event\n      // through the first known/available node\n      dispatch: {value(type, detail) {\n        const {_wire$} = this;\n        if (_wire$) {\n          const event = new CustomEvent(type, {\n            bubbles: true,\n            cancelable: true,\n            detail\n          });\n          event.component = this;\n          return (_wire$.dispatchEvent ?\n                    _wire$ :\n                    _wire$.childNodes[0]\n                  ).dispatchEvent(event);\n        }\n        return false;\n      }},\n      // setting some property state through a new object\n      // or a callback, triggers also automatically a render\n      // unless explicitly specified to not do so (render === false)\n      setState: {value(state, render) {\n        const target = this.state;\n        const source = typeof state === 'function' ? state.call(this, target) : state;\n        for (const key in source) target[key] = source[key];\n        if (render !== false)\n          this.render();\n        return this;\n      }}\n    }\n  );\n}\n\n// instead of a secret key I could've used a WeakMap\n// However, attaching a property directly will result\n// into better performance with thousands of components\n// hanging around, and less memory pressure caused by the WeakMap\nconst lazyGetter = (type, fn) => {\n  const secret = '_' + type + '$';\n  return {\n    get() {\n      return this[secret] || setValue(this, secret, fn.call(this, type));\n    },\n    set(value) {\n      setValue(this, secret, value);\n    }\n  };\n};\n\n// shortcut to set value on get or set(value)\nconst setValue = (self, secret, value) =>\n  Object.defineProperty(self, secret, {\n    configurable: true,\n    value: typeof value === 'function' ?\n      function () {\n        return (self._wire$ = value.apply(this, arguments));\n      } :\n      value\n  })[secret]\n;\n","const attributes = {};\nconst intents = {};\nconst keys = [];\nconst hasOwnProperty = intents.hasOwnProperty;\n\nlet length = 0;\n\nexport default {\n\n  // used to invoke right away hyper:attributes\n  attributes,\n\n  // hyperHTML.define('intent', (object, update) => {...})\n  // can be used to define a third parts update mechanism\n  // when every other known mechanism failed.\n  // hyper.define('user', info => info.name);\n  // hyper(node)`<p>${{user}}</p>`;\n  define: (intent, callback) => {\n    if (intent.indexOf('-') < 0) {\n      if (!(intent in intents)) {\n        length = keys.push(intent);\n      }\n      intents[intent] = callback;\n    } else {\n      attributes[intent] = callback;\n    }\n  },\n\n  // this method is used internally as last resort\n  // to retrieve a value out of an object\n  invoke: (object, callback) => {\n    for (let i = 0; i < length; i++) {\n      let key = keys[i];\n      if (hasOwnProperty.call(object, key)) {\n        return intents[key](object[key], callback);\n      }\n    }\n  }\n};\n","// these are tiny helpers to simplify most common operations needed here\nexport const create = (node, type) => doc(node).createElement(type);\nexport const doc = node => node.ownerDocument || node;\nexport const fragment = node => doc(node).createDocumentFragment();\nexport const text = (node, text) => doc(node).createTextNode(text);\n","// TODO:  I'd love to code-cover RegExp too here\n//        these are fundamental for this library\n\nconst spaces = ' \\\\f\\\\n\\\\r\\\\t';\nconst almostEverything = '[^ ' + spaces + '\\\\/>\"\\'=]+';\nconst attrName = '[ ' + spaces + ']+' + almostEverything;\nconst tagName = '<([A-Za-z]+[A-Za-z0-9:_-]*)((?:';\nconst attrPartials = '(?:=(?:\\'[^\\']*?\\'|\"[^\"]*?\"|<[^>]*?>|' + almostEverything + '))?)';\n\nconst attrSeeker = new RegExp(\n  tagName + attrName + attrPartials + '+)([ ' + spaces + ']*/?>)',\n  'g'\n);\n\nconst selfClosing = new RegExp(\n  tagName + attrName + attrPartials + '*)([ ' + spaces + ']*/>)',\n  'g'\n);\n\nexport {attrName, attrSeeker, selfClosing};\n","import {create, fragment, text} from './easy-dom.js';\n\nconst testFragment = fragment(document);\n\n// DOM4 node.append(...many)\nexport const hasAppend = 'append' in testFragment;\n\n// detect old browsers without HTMLTemplateElement content support\nexport const hasContent = 'content' in create(document, 'template');\n\n// IE 11 has problems with cloning templates: it \"forgets\" empty childNodes\ntestFragment.appendChild(text(testFragment, 'g'));\ntestFragment.appendChild(text(testFragment, ''));\nexport const hasDoomedCloneNode = testFragment.cloneNode(true).childNodes.length === 1;\n\n// old browsers need to fallback to cloneNode\n// Custom Elements V0 and V1 will work polyfilled\n// but native implementations need importNode instead\n// (specially Chromium and its old V0 implementation)\nexport const hasImportNode = 'importNode' in document;\n","import {attrName, attrSeeker} from './re.js';\n\nimport {\n  G,\n  ELEMENT_NODE,\n  OWNER_SVG_ELEMENT,\n  SVG_NAMESPACE,\n  UID,\n  UIDC\n} from './constants.js';\n\nimport {\n  hasAppend,\n  hasContent,\n  hasDoomedCloneNode,\n  hasImportNode\n} from './features-detection.js';\n\nimport {create, doc, fragment} from './easy-dom.js';\n\nimport {Map, WeakMap} from './poorlyfills.js';\n\n// appends an array of nodes\n// to a generic node/fragment\n// When available, uses append passing all arguments at once\n// hoping that's somehow faster, even if append has more checks on type\nexport const append = hasAppend ?\n  (node, childNodes) => {\n    node.append.apply(node, childNodes);\n  } :\n  (node, childNodes) => {\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      node.appendChild(childNodes[i]);\n    }\n  };\n\nconst findAttributes = new RegExp('(' + attrName + '=)([\\'\"]?)' + UIDC + '\\\\2', 'gi');\nconst comments = ($0, $1, $2, $3) =>\n  '<' + $1 + $2.replace(findAttributes, replaceAttributes) + $3;\nconst replaceAttributes = ($0, $1, $2) => $1 + ($2 || '\"') + UID + ($2 || '\"');\n\n// given a node and a generic HTML content,\n// create either an SVG or an HTML fragment\n// where such content will be injected\nexport const createFragment = (node, html) =>\n  (OWNER_SVG_ELEMENT in node ?\n    SVGFragment :\n    HTMLFragment\n  )(node, html.replace(attrSeeker, comments));\n\n// IE/Edge shenanigans proof cloneNode\n// it goes through all nodes manually\n// instead of relying the engine to suddenly\n// merge nodes together\nconst cloneNode = hasDoomedCloneNode ?\n  node => {\n    const clone = node.cloneNode();\n    const childNodes = node.childNodes ||\n                      // this is an excess of caution\n                      // but some node, in IE, might not\n                      // have childNodes property.\n                      // The following fallback ensure working code\n                      // in older IE without compromising performance\n                      // or any other browser/engine involved.\n                      /* istanbul ignore next */\n                      [];\n    const length = childNodes.length;\n    for (let i = 0; i < length; i++) {\n      clone.appendChild(cloneNode(childNodes[i]));\n    }\n    return clone;\n  } :\n  // the following ignore is due code-coverage\n  // combination of not having document.importNode\n  // but having a working node.cloneNode.\n  // This shenario is common on older Android/WebKit browsers\n  // but basicHTML here tests just two major cases:\n  // with document.importNode or with broken cloneNode.\n  /* istanbul ignore next */\n  node => node.cloneNode(true);\n\n// IE and Edge do not support children in SVG nodes\n/* istanbul ignore next */\nexport const getChildren = node => {\n  const children = [];\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  for (let i = 0; i < length; i++) {\n    if (childNodes[i].nodeType === ELEMENT_NODE)\n      children.push(childNodes[i]);\n  }\n  return children;\n};\n\n// used to import html into fragments\nexport const importNode = hasImportNode ?\n  (doc, node) => doc.importNode(node, true) :\n  (doc, node) => cloneNode(node)\n\n// just recycling a one-off array to use slice\n// in every needed place\nexport const slice = [].slice;\n\n// lazy evaluated, returns the unique identity\n// of a template literal, as tempalte literal itself.\n// By default, ES2015 template literals are unique\n// tag`a${1}z` === tag`a${2}z`\n// even if interpolated values are different\n// the template chunks are in a frozen Array\n// that is identical each time you use the same\n// literal to represent same static content\n// around its own interpolations.\nexport const unique = template => TL(template);\n\n// https://codepen.io/WebReflection/pen/dqZrpV?editors=0010\n// TL returns a unique version of the template\n// it needs lazy feature detection\n// (cannot trust literals with transpiled code)\nlet TL = t => {\n  if (\n    // TypeScript template literals are not standard\n    t.propertyIsEnumerable('raw') ||\n    !Object.isFrozen(t.raw) ||\n    (\n        // Firefox < 55 has not standard implementation neither\n        /Firefox\\/(\\d+)/.test((G.navigator || {}).userAgent) &&\n          parseFloat(RegExp.$1) < 55\n        )\n  ) {\n    const T = {};\n    TL = t => {\n      const k = '^' + t.join('^');\n      return T[k] || (T[k] = t);\n    };\n  } else {\n    // make TL an identity like function\n    TL = t => t;\n  }\n  return TL(t);\n};\n\n// used to store templates objects\n// since neither Map nor WeakMap are safe\nexport const TemplateMap = () => {\n  try {\n    const wm = new WeakMap;\n    const o_O = Object.freeze([]);\n    wm.set(o_O, true);\n    if (!wm.get(o_O))\n      throw o_O;\n    return wm;\n  } catch(o_O) {\n    // inevitable legacy code leaks due\n    // https://github.com/tc39/ecma262/pull/890\n    return new Map;\n  }\n};\n\n// create document fragments via native template\n// with a fallback for browsers that won't be able\n// to deal with some injected element such <td> or others\nconst HTMLFragment = hasContent ?\n  (node, html) => {\n    const container = create(node, 'template');\n    container.innerHTML = html;\n    return container.content;\n  } :\n  (node, html) => {\n    const container = create(node, 'template');\n    const content = fragment(node);\n    if (/^[^\\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(html)) {\n      const selector = RegExp.$1;\n      container.innerHTML = '<table>' + html + '</table>';\n      append(content, slice.call(container.querySelectorAll(selector)));\n    } else {\n      container.innerHTML = html;\n      append(content, slice.call(container.childNodes));\n    }\n    return content;\n  };\n\n// creates SVG fragment with a fallback for IE that needs SVG\n// within the HTML content\nconst SVGFragment = hasContent ?\n  (node, html) => {\n    const content = fragment(node);\n    const container = doc(node).createElementNS(SVG_NAMESPACE, 'svg');\n    container.innerHTML = html;\n    append(content, slice.call(container.childNodes));\n    return content;\n  } :\n  (node, html) => {\n    const content = fragment(node);\n    const container = create(node, 'div');\n    container.innerHTML = '<svg xmlns=\"' + SVG_NAMESPACE + '\">' + html + '</svg>';\n    append(content, slice.call(container.firstChild.childNodes));\n    return content;\n  };\n","import { append } from '../shared/utils.js';\nimport { doc, fragment } from '../shared/easy-dom.js';\n\nexport default function Wire(childNodes) {\n  this.childNodes = childNodes;\n  this.length = childNodes.length;\n  this.first = childNodes[0];\n  this.last = childNodes[this.length - 1];\n}\n\n// when a wire is inserted, all its nodes will follow\nWire.prototype.insert = function insert() {\n  const df = fragment(this.first);\n  append(df, this.childNodes);\n  return df;\n};\n\n// when a wire is removed, all its nodes must be removed as well\nWire.prototype.remove = function remove() {\n  const first = this.first;\n  const last = this.last;\n  if (this.length === 2) {\n    last.parentNode.removeChild(last);\n  } else {\n    const range = doc(first).createRange();\n    range.setStartBefore(this.childNodes[1]);\n    range.setEndAfter(last);\n    range.deleteContents();\n  }\n  return first;\n};\n","import {\n  COMMENT_NODE,\n  DOCUMENT_FRAGMENT_NODE,\n  ELEMENT_NODE\n} from '../shared/constants.js';\n\n// every template literal interpolation indicates\n// a precise target in the DOM the template is representing.\n// `<p id=${'attribute'}>some ${'content'}</p>`\n// hyperHTML finds only once per template literal,\n// hence once per entire application life-cycle,\n// all nodes that are related to interpolations.\n// These nodes are stored as indexes used to retrieve,\n// once per upgrade, nodes that will change on each future update.\n// A path example is [2, 0, 1] representing the operation:\n// node.childNodes[2].childNodes[0].childNodes[1]\n// Attributes are addressed via their owner node and their name.\nconst createPath = node => {\n  const path = [];\n  let parentNode;\n  switch (node.nodeType) {\n    case ELEMENT_NODE:\n    case DOCUMENT_FRAGMENT_NODE:\n      parentNode = node;\n      break;\n    case COMMENT_NODE:\n      parentNode = node.parentNode;\n      prepend(path, parentNode, node);\n      break;\n    default:\n      parentNode = node.ownerElement;\n      break;\n  }\n  for (\n    node = parentNode;\n    (parentNode = parentNode.parentNode);\n    node = parentNode\n  ) {\n    prepend(path, parentNode, node);\n  }\n  return path;\n};\n\nconst prepend = (path, parent, node) => {\n  path.unshift(path.indexOf.call(parent.childNodes, node));\n};\n\nexport default {\n  create: (type, node, name) => ({type, name, node, path: createPath(node)}),\n  find: (node, path) => {\n    const length = path.length;\n    for (let i = 0; i < length; i++) {\n      node = node.childNodes[path[i]];\n    }\n    return node;\n  }\n}\n","// from https://github.com/developit/preact/blob/33fc697ac11762a1cb6e71e9847670d047af7ce5/src/constants.js\nconst IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n// style is handled as both string and object\n// even if the target is an SVG element (consistency)\nexport default (node, original, isSVG) => {\n  if (isSVG) {\n    const style = original.cloneNode(true);\n    style.value = '';\n    node.setAttributeNode(style);\n    return update(style, isSVG);\n  }\n  return update(node.style, isSVG);\n};\n\n// the update takes care or changing/replacing\n// only properties that are different or\n// in case of string, the whole node\nconst update = (style, isSVG) => {\n  let oldType, oldValue;\n  return newValue => {\n    switch (typeof newValue) {\n      case 'object':\n        if (newValue) {\n          if (oldType === 'object') {\n            if (!isSVG) {\n              if (oldValue !== newValue) {\n                for (const key in oldValue) {\n                  if (!(key in newValue)) {\n                    style[key] = '';\n                  }\n                }\n              }\n            }\n          } else {\n            if (isSVG)\n              style.value = '';\n            else\n              style.cssText = '';\n          }\n          const info = isSVG ? {} : style;\n          for (const key in newValue) {\n            const value = newValue[key];\n            const styleValue = typeof value === 'number' &&\n                                !IS_NON_DIMENSIONAL.test(key) ?\n                                (value + 'px') : value;\n            if (/^--/.test(key))\n              info.setProperty(key, styleValue);\n            else\n              info[key] = styleValue;\n          }\n          oldType = 'object';\n          if (isSVG)\n            style.value = toStyle((oldValue = info));\n          else\n            oldValue = newValue;\n          break;\n        }\n      default:\n        if (oldValue != newValue) {\n          oldType = 'string';\n          oldValue = newValue;\n          if (isSVG)\n            style.value = newValue || '';\n          else\n            style.cssText = newValue || '';\n        }\n        break;\n    }\n  };\n};\n\nconst hyphen = /([^A-Z])([A-Z]+)/g;\nconst ized = ($0, $1, $2) => $1 + '-' + $2.toLowerCase();\nconst toStyle = object => {\n  const css = [];\n  for (const key in object) {\n    css.push(key.replace(hyphen, ized), ':', object[key], ';');\n  }\n  return css.join('');\n};","/* AUTOMATICALLY IMPORTED, DO NOT MODIFY */\nexport const append = (get, parent, children, start, end, before) => {\n  if ((end - start) < 2)\n    parent.insertBefore(get(children[start], 1), before);\n  else {\n    const fragment = parent.ownerDocument.createDocumentFragment();\n    while (start < end)\n      fragment.appendChild(get(children[start++], 1));\n    parent.insertBefore(fragment, before);\n  }\n};\n\nexport const eqeq = (a, b) => a == b;\n\nexport const identity = O => O;\n\nexport const indexOf = (\n  moreNodes,\n  moreStart,\n  moreEnd,\n  lessNodes,\n  lessStart,\n  lessEnd,\n  compare\n) => {\n  const length = lessEnd - lessStart;\n  /* istanbul ignore if */\n  if (length < 1)\n    return -1;\n  while ((moreEnd - moreStart) >= length) {\n    let m = moreStart;\n    let l = lessStart;\n    while (\n      m < moreEnd &&\n      l < lessEnd &&\n      compare(moreNodes[m], lessNodes[l])\n    ) {\n      m++;\n      l++;\n    }\n    if (l === lessEnd)\n      return moreStart;\n    moreStart = m + 1;\n  }\n  return -1;\n};\n\nexport const isReversed = (\n  futureNodes,\n  futureEnd,\n  currentNodes,\n  currentStart,\n  currentEnd,\n  compare\n) => {\n  while (\n    currentStart < currentEnd &&\n    compare(\n      currentNodes[currentStart],\n      futureNodes[futureEnd - 1]\n    )) {\n      currentStart++;\n      futureEnd--;\n    };\n  return futureEnd === 0;\n};\n\nexport const next = (get, list, i, length, before) => i < length ?\n              get(list[i], 0) :\n              (0 < i ?\n                get(list[i - 1], -0).nextSibling :\n                before);\n\nexport const remove = (get, parent, children, start, end) => {\n  if ((end - start) < 2)\n    parent.removeChild(get(children[start], -1));\n  else {\n    const range = parent.ownerDocument.createRange();\n    range.setStartBefore(get(children[start], -1));\n    range.setEndAfter(get(children[end - 1], -1));\n    range.deleteContents();\n  }\n};\n\n// - - - - - - - - - - - - - - - - - - -\n// diff related constants and utilities\n// - - - - - - - - - - - - - - - - - - -\n\nconst DELETION = -1;\nconst INSERTION = 1;\nconst SKIP = 0;\nconst SKIP_OND = 50;\n\n/* istanbul ignore next */\nconst Rel = typeof Map === 'undefined' ?\n  function () {\n    const k = [], v = [];\n    return {\n      has: value => -1 < k.indexOf(value),\n      get: value => v[k.indexOf(value)],\n      set: value => {\n        const i = k.indexOf(value);\n        v[i < 0 ? (k.push(value) - 1) : i] = value;\n      }\n    };\n  } :\n  Map\n;\n\nconst HS = (\n  futureNodes,\n  futureStart,\n  futureEnd,\n  futureChanges,\n  currentNodes,\n  currentStart,\n  currentEnd,\n  currentChanges\n) => {\n\n  let k = 0;\n  /* istanbul ignore next */\n  let minLen = futureChanges < currentChanges ? futureChanges : currentChanges;\n  const link = Array(minLen++);\n  const tresh = Array(minLen);\n  tresh[0] = -1;\n\n  for (let i = 1; i < minLen; i++)\n    tresh[i] = currentEnd;\n\n  const keymap = new Rel;\n  for (let i = currentStart; i < currentEnd; i++)\n    keymap.set(currentNodes[i], i);\n\n  for (let i = futureStart; i < futureEnd; i++) {\n    const idxInOld = keymap.get(futureNodes[i]);\n    if (idxInOld != null) {\n      k = findK(tresh, minLen, idxInOld);\n      /* istanbul ignore else */\n      if (-1 < k) {\n        tresh[k] = idxInOld;\n        link[k] = {\n          newi: i,\n          oldi: idxInOld,\n          prev: link[k - 1]\n        };\n      }\n    }\n  }\n\n  k = --minLen;\n  --currentEnd;\n  while (tresh[k] > currentEnd) --k;\n\n  minLen = currentChanges + futureChanges - k;\n  const diff = Array(minLen);\n  let ptr = link[k];\n  --futureEnd;\n  while (ptr) {\n    const {newi, oldi} = ptr;\n    while (futureEnd > newi) {\n      diff[--minLen] = INSERTION;\n      --futureEnd;\n    }\n    while (currentEnd > oldi) {\n      diff[--minLen] = DELETION;\n      --currentEnd;\n    }\n    diff[--minLen] = SKIP;\n    --futureEnd;\n    --currentEnd;\n    ptr = ptr.prev;\n  }\n  while (futureEnd >= futureStart) {\n    diff[--minLen] = INSERTION;\n    --futureEnd;\n  }\n  while (currentEnd >= currentStart) {\n    diff[--minLen] = DELETION;\n    --currentEnd;\n  }\n  return diff;\n};\n\n// this is pretty much the same petit-dom code without the delete map part\n// https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L556-L561\nconst OND = (\n  futureNodes,\n  futureStart,\n  rows,\n  currentNodes,\n  currentStart,\n  cols,\n  compare\n) => {\n  const length = rows + cols;\n  const v = [];\n  let d, k, r, c, pv, cv, pd;\n  outer: for (d = 0; d <= length; d++) {\n    /* istanbul ignore if */\n    if (d > SKIP_OND)\n      return null;\n    pd = d - 1;\n    /* istanbul ignore next */\n    pv = d ? v[d - 1] : [0, 0];\n    cv = v[d] = [];\n    for (k = -d; k <= d; k += 2) {\n      if (k === -d || (k !== d && pv[pd + k - 1] < pv[pd + k + 1])) {\n        c = pv[pd + k + 1];\n      } else {\n        c = pv[pd + k - 1] + 1;\n      }\n      r = c - k;\n      while (\n        c < cols &&\n        r < rows &&\n        compare(\n          currentNodes[currentStart + c],\n          futureNodes[futureStart + r]\n        )\n      ) {\n        c++;\n        r++;\n      }\n      if (c === cols && r === rows) {\n        break outer;\n      }\n      cv[d + k] = c;\n    }\n  }\n\n  const diff = Array(d / 2 + length / 2);\n  let diffIdx = diff.length - 1;\n  for (d = v.length - 1; d >= 0; d--) {\n    while (\n      c > 0 &&\n      r > 0 &&\n      compare(\n        currentNodes[currentStart + c - 1],\n        futureNodes[futureStart + r - 1]\n      )\n    ) {\n      // diagonal edge = equality\n      diff[diffIdx--] = SKIP;\n      c--;\n      r--;\n    }\n    if (!d)\n      break;\n    pd = d - 1;\n    /* istanbul ignore next */\n    pv = d ? v[d - 1] : [0, 0];\n    k = c - r;\n    if (k === -d || (k !== d && pv[pd + k - 1] < pv[pd + k + 1])) {\n      // vertical edge = insertion\n      r--;\n      diff[diffIdx--] = INSERTION;\n    } else {\n      // horizontal edge = deletion\n      c--;\n      diff[diffIdx--] = DELETION;\n    }\n  }\n  return diff;\n};\n\nconst applyDiff = (\n  diff,\n  get,\n  parentNode,\n  futureNodes,\n  futureStart,\n  currentNodes,\n  currentStart,\n  currentLength,\n  before\n) => {\n  const live = new Rel;\n  const length = diff.length;\n  let currentIndex = currentStart;\n  let i = 0;\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        futureStart++;\n        currentIndex++;\n        break;\n      case INSERTION:\n        // TODO: bulk appends for sequential nodes\n        live.set(futureNodes[futureStart], 1);\n        append(\n          get,\n          parentNode,\n          futureNodes,\n          futureStart++,\n          futureStart,\n          currentIndex < currentLength ?\n            get(currentNodes[currentIndex], 1) :\n            before\n        );\n        break;\n      case DELETION:\n        currentIndex++;\n        break;\n    }\n  }\n  i = 0;\n  while (i < length) {\n    switch (diff[i++]) {\n      case SKIP:\n        currentStart++;\n        break;\n      case DELETION:\n        // TODO: bulk removes for sequential nodes\n        if (live.has(currentNodes[currentStart]))\n          currentStart++;\n        else\n          remove(\n            get,\n            parentNode,\n            currentNodes,\n            currentStart++,\n            currentStart\n          );\n        break;\n    }\n  }\n};\n\nconst findK = (ktr, length, j) => {\n  let lo = 1;\n  let hi = length;\n  while (lo < hi) {\n    var mid = ((lo + hi) / 2) >>> 0;\n    if (j < ktr[mid])\n      hi = mid;\n    else\n      lo = mid + 1;\n  }\n  return lo;\n}\n\nexport const smartDiff = (\n  get,\n  parentNode,\n  futureNodes,\n  futureStart,\n  futureEnd,\n  futureChanges,\n  currentNodes,\n  currentStart,\n  currentEnd,\n  currentChanges,\n  currentLength,\n  compare,\n  before\n) => {\n  applyDiff(\n    OND(\n      futureNodes,\n      futureStart,\n      futureChanges,\n      currentNodes,\n      currentStart,\n      currentChanges,\n      compare\n    ) ||\n    HS(\n      futureNodes,\n      futureStart,\n      futureEnd,\n      futureChanges,\n      currentNodes,\n      currentStart,\n      currentEnd,\n      currentChanges\n    ),\n    get,\n    parentNode,\n    futureNodes,\n    futureStart,\n    currentNodes,\n    currentStart,\n    currentLength,\n    before\n  );\n};\n","/* AUTOMATICALLY IMPORTED, DO NOT MODIFY */\n/*! (c) 2018 Andrea Giammarchi (ISC) */\n\nimport {\n  eqeq, identity, indexOf, isReversed, next,\n  append, remove,\n  smartDiff\n} from './utils.js';\n\nconst domdiff = (\n  parentNode,     // where changes happen\n  currentNodes,   // Array of current items/nodes\n  futureNodes,    // Array of future items/nodes\n  options         // optional object with one of the following properties\n                  //  before: domNode\n                  //  compare(generic, generic) => true if same generic\n                  //  node(generic) => Node\n) => {\n  if (!options)\n    options = {};\n\n  const compare = options.compare || eqeq;\n  const get = options.node || identity;\n  const before = options.before == null ? null : get(options.before, 0);\n\n  const currentLength = currentNodes.length;\n  let currentEnd = currentLength;\n  let currentStart = 0;\n\n  let futureEnd = futureNodes.length;\n  let futureStart = 0;\n\n  // common prefix\n  while (\n    currentStart < currentEnd &&\n    futureStart < futureEnd &&\n    compare(currentNodes[currentStart], futureNodes[futureStart])\n  ) {\n    currentStart++;\n    futureStart++;\n  }\n\n  // common suffix\n  while (\n    currentStart < currentEnd &&\n    futureStart < futureEnd &&\n    compare(currentNodes[currentEnd - 1], futureNodes[futureEnd - 1])\n  ) {\n    currentEnd--;\n    futureEnd--;\n  }\n\n  const currentSame = currentStart === currentEnd;\n  const futureSame = futureStart === futureEnd;\n\n  // same list\n  if (currentSame && futureSame)\n    return futureNodes;\n\n  // only stuff to add\n  if (currentSame && futureStart < futureEnd) {\n    append(\n      get,\n      parentNode,\n      futureNodes,\n      futureStart,\n      futureEnd,\n      next(get, currentNodes, currentStart, currentLength, before)\n    );\n    return futureNodes;\n  }\n\n  // only stuff to remove\n  if (futureSame && currentStart < currentEnd) {\n    remove(\n      get,\n      parentNode,\n      currentNodes,\n      currentStart,\n      currentEnd\n    );\n    return futureNodes;\n  }\n\n  const currentChanges = currentEnd - currentStart;\n  const futureChanges = futureEnd - futureStart;\n  let i = -1;\n\n  // 2 simple indels: the shortest sequence is a subsequence of the longest\n  if (currentChanges < futureChanges) {\n    i = indexOf(\n      futureNodes,\n      futureStart,\n      futureEnd,\n      currentNodes,\n      currentStart,\n      currentEnd,\n      compare\n    );\n    // inner diff\n    if (-1 < i) {\n      append(\n        get,\n        parentNode,\n        futureNodes,\n        futureStart,\n        i,\n        get(currentNodes[currentStart], 0)\n      );\n      append(\n        get,\n        parentNode,\n        futureNodes,\n        i + currentChanges,\n        futureEnd,\n        next(get, currentNodes, currentEnd, currentLength, before)\n      );\n      return futureNodes;\n    }\n  }\n  /* istanbul ignore else */\n  else if (futureChanges < currentChanges) {\n    i = indexOf(\n      currentNodes,\n      currentStart,\n      currentEnd,\n      futureNodes,\n      futureStart,\n      futureEnd,\n      compare\n    );\n    // outer diff\n    if (-1 < i) {\n      remove(\n        get,\n        parentNode,\n        currentNodes,\n        currentStart,\n        i\n      );\n      remove(\n        get,\n        parentNode,\n        currentNodes,\n        i + futureChanges,\n        currentEnd\n      );\n      return futureNodes;\n    }\n  }\n\n  // common case with one replacement for many nodes\n  // or many nodes replaced for a single one\n  /* istanbul ignore else */\n  if ((currentChanges < 2 || futureChanges < 2)) {\n    append(\n      get,\n      parentNode,\n      futureNodes,\n      futureStart,\n      futureEnd,\n      get(currentNodes[currentStart], 0)\n    );\n    remove(\n      get,\n      parentNode,\n      currentNodes,\n      currentStart,\n      currentEnd\n    );\n    return futureNodes;\n  }\n\n  // the half match diff part has been skipped in petit-dom\n  // https://github.com/yelouafi/petit-dom/blob/bd6f5c919b5ae5297be01612c524c40be45f14a7/src/vdom.js#L391-L397\n  // accordingly, I think it's safe to skip in here too\n  // if one day it'll come out like the speediest thing ever to do\n  // then I might add it in here too\n\n  // Extra: before going too fancy, what about reversed lists ?\n  //        This should bail out pretty quickly if that's not the case.\n  if (\n    currentChanges === futureChanges &&\n    isReversed(\n      futureNodes,\n      futureEnd,\n      currentNodes,\n      currentStart,\n      currentEnd,\n      compare\n    )\n  ) {\n    append(\n      get,\n      parentNode,\n      futureNodes,\n      futureStart,\n      futureEnd,\n      next(get, currentNodes, currentEnd, currentLength, before)\n    );\n    return futureNodes;\n  }\n\n  // last resort through a smart diff\n  smartDiff(\n    get,\n    parentNode,\n    futureNodes,\n    futureStart,\n    futureEnd,\n    futureChanges,\n    currentNodes,\n    currentStart,\n    currentEnd,\n    currentChanges,\n    currentLength,\n    compare,\n    before\n  );\n\n  return futureNodes;\n};\n\nexport default domdiff;\n","import {\n  CONNECTED, DISCONNECTED,\n  COMMENT_NODE, DOCUMENT_FRAGMENT_NODE, ELEMENT_NODE, TEXT_NODE,\n  OWNER_SVG_ELEMENT,\n  SHOULD_USE_TEXT_CONTENT,\n  UID, UIDC\n} from '../shared/constants.js';\n\nimport Component from '../classes/Component.js';\nimport Wire from '../classes/Wire.js';\nimport Path from './Path.js';\nimport Style from './Style.js';\nimport Intent from './Intent.js';\nimport domdiff from '../3rd/domdiff.js';\n// see /^script$/i.test(nodeName) bit down here\n// import { create as createElement, text } from '../shared/easy-dom.js';\nimport { text } from '../shared/easy-dom.js';\nimport { Event, WeakSet, isArray, trim } from '../shared/poorlyfills.js';\nimport { createFragment, getChildren, slice } from '../shared/utils.js';\n\n// hyper.Component have a connected/disconnected\n// mechanism provided by MutationObserver\n// This weak set is used to recognize components\n// as DOM node that needs to trigger connected/disconnected events\nconst components = new WeakSet;\n\n// a basic dictionary used to filter already cached attributes\n// while looking for special hyperHTML values.\nfunction Cache() {}\nCache.prototype = Object.create(null);\n\n// returns an intent to explicitly inject content as html\nconst asHTML = html => ({html});\n\n// returns nodes from wires and components\nconst asNode = (item, i) => {\n  return 'ELEMENT_NODE' in item ?\n    item :\n    (item.constructor === Wire ?\n      // in the Wire case, the content can be\n      // removed, post-pended, inserted, or pre-pended and\n      // all these cases are handled by domdiff already\n      /* istanbul ignore next */\n      ((1 / i) < 0 ?\n        (i ? item.remove() : item.last) :\n        (i ? item.insert() : item.first)) :\n      asNode(item.render(), i));\n}\n\n// returns true if domdiff can handle the value\nconst canDiff = value =>  'ELEMENT_NODE' in value ||\nvalue instanceof Wire ||\nvalue instanceof Component;\n\n// updates are created once per context upgrade\n// within the main render function (../hyper/render.js)\n// These are an Array of callbacks to invoke passing\n// each interpolation value.\n// Updates can be related to any kind of content,\n// attributes, or special text-only cases such <style>\n// elements or <textarea>\nconst create = (root, paths) => {\n  const updates = [];\n  const length = paths.length;\n  for (let i = 0; i < length; i++) {\n    const info = paths[i];\n    const node = Path.find(root, info.path);\n    switch (info.type) {\n      case 'any':\n        updates.push(setAnyContent(node, []));\n        break;\n      case 'attr':\n        updates.push(setAttribute(node, info.name, info.node));\n        break;\n      case 'text':\n        updates.push(setTextContent(node));\n        node.textContent = '';\n        break;\n    }\n  }\n  return updates;\n};\n\n// finding all paths is a one-off operation performed\n// when a new template literal is used.\n// The goal is to map all target nodes that will be\n// used to update content/attributes every time\n// the same template literal is used to create content.\n// The result is a list of paths related to the template\n// with all the necessary info to create updates as\n// list of callbacks that target directly affected nodes.\nconst find = (node, paths, parts) => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    switch (child.nodeType) {\n      case ELEMENT_NODE:\n        findAttributes(child, paths, parts);\n        find(child, paths, parts);\n        break;\n      case COMMENT_NODE:\n        if (child.textContent === UID) {\n          parts.shift();\n          paths.push(\n            // basicHTML or other non standard engines\n            // might end up having comments in nodes\n            // where they shouldn't, hence this check.\n            SHOULD_USE_TEXT_CONTENT.test(node.nodeName) ?\n              Path.create('text', node) :\n              Path.create('any', child)\n          );\n        }\n        break;\n      case TEXT_NODE:\n        // the following ignore is actually covered by browsers\n        // only basicHTML ends up on previous COMMENT_NODE case\n        // instead of TEXT_NODE because it knows nothing about\n        // special style or textarea behavior\n        /* istanbul ignore if */\n        if (\n          SHOULD_USE_TEXT_CONTENT.test(node.nodeName) &&\n          trim.call(child.textContent) === UIDC\n        ) {\n          parts.shift();\n          paths.push(Path.create('text', node));\n        }\n        break;\n    }\n  }\n};\n\n// attributes are searched via unique hyperHTML id value.\n// Despite HTML being case insensitive, hyperHTML is able\n// to recognize attributes by name in a caseSensitive way.\n// This plays well with Custom Elements definitions\n// and also with XML-like environments, without trusting\n// the resulting DOM but the template literal as the source of truth.\n// IE/Edge has a funny bug with attributes and these might be duplicated.\n// This is why there is a cache in charge of being sure no duplicated\n// attributes are ever considered in future updates.\nconst findAttributes = (node, paths, parts) => {\n  const cache = new Cache;\n  const attributes = node.attributes;\n  const array = slice.call(attributes);\n  const remove = [];\n  const length = array.length;\n  for (let i = 0; i < length; i++) {\n    const attribute = array[i];\n    if (attribute.value === UID) {\n      const name = attribute.name;\n      // the following ignore is covered by IE\n      // and the IE9 double viewBox test\n      /* istanbul ignore else */\n      if (!(name in cache)) {\n        const realName = parts.shift().replace(/^(?:|[\\S\\s]*?\\s)(\\S+?)=['\"]?$/, '$1');\n        cache[name] = attributes[realName] ||\n                      // the following ignore is covered by browsers\n                      // while basicHTML is already case-sensitive\n                      /* istanbul ignore next */\n                      attributes[realName.toLowerCase()];\n        paths.push(Path.create('attr', cache[name], realName));\n      }\n      remove.push(attribute);\n    }\n  }\n  const len = remove.length;\n  for (let i = 0; i < len; i++) {\n    // Edge HTML bug #16878726\n    const attribute = remove[i];\n    if (/^id$/i.test(attribute.name))\n      node.removeAttribute(attribute.name);\n    // standard browsers would work just fine here\n    else\n      node.removeAttributeNode(remove[i]);\n  }\n\n  // This is a very specific Firefox/Safari issue\n  // but since it should be a not so common pattern,\n  // it's probably worth patching regardless.\n  // Basically, scripts created through strings are death.\n  // You need to create fresh new scripts instead.\n  // TODO: is there any other node that needs such nonsense?\n  const nodeName = node.nodeName;\n  if (/^script$/i.test(nodeName)) {\n    // this used to be like that\n    // const script = createElement(node, nodeName);\n    // then Edge arrived and decided that scripts created\n    // through template documents aren't worth executing\n    // so it became this ... hopefully it won't hurt in the wild\n    const script = document.createElement(nodeName);\n    for (let i = 0; i < attributes.length; i++) {\n      script.setAttributeNode(attributes[i].cloneNode(true));\n    }\n    script.textContent = node.textContent;\n    node.parentNode.replaceChild(script, node);\n  }\n};\n\n// when a Promise is used as interpolation value\n// its result must be parsed once resolved.\n// This callback is in charge of understanding what to do\n// with a returned value once the promise is resolved.\nconst invokeAtDistance = (value, callback) => {\n  callback(value.placeholder);\n  if ('text' in value) {\n    Promise.resolve(value.text).then(String).then(callback);\n  } else if ('any' in value) {\n    Promise.resolve(value.any).then(callback);\n  } else if ('html' in value) {\n    Promise.resolve(value.html).then(asHTML).then(callback);\n  } else {\n    Promise.resolve(Intent.invoke(value, callback)).then(callback);\n  }\n};\n\n// quick and dirty way to check for Promise/ish values\nconst isPromise_ish = value => value != null && 'then' in value;\n\n// list of attributes that should not be directly assigned\nconst readOnly = /^(?:form|list)$/i;\n\n// in a hyper(node)`<div>${content}</div>` case\n// everything could happen:\n//  * it's a JS primitive, stored as text\n//  * it's null or undefined, the node should be cleaned\n//  * it's a component, update the content by rendering it\n//  * it's a promise, update the content once resolved\n//  * it's an explicit intent, perform the desired operation\n//  * it's an Array, resolve all values if Promises and/or\n//    update the node with the resulting list of content\nconst setAnyContent = (node, childNodes) => {\n  const diffOptions = {node: asNode, before: node};\n  let fastPath = false;\n  let oldValue;\n  const anyContent = value => {\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n        if (fastPath) {\n          if (oldValue !== value) {\n            oldValue = value;\n            childNodes[0].textContent = value;\n          }\n        } else {\n          fastPath = true;\n          oldValue = value;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [text(node, value)],\n            diffOptions\n          );\n        }\n        break;\n      case 'function':\n        anyContent(value(node));\n        break;\n      case 'object':\n      case 'undefined':\n        if (value == null) {\n          fastPath = false;\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            [],\n            diffOptions\n          );\n          break;\n        }\n      default:\n        fastPath = false;\n        oldValue = value;\n        if (isArray(value)) {\n          if (value.length === 0) {\n            if (childNodes.length) {\n              childNodes = domdiff(\n                node.parentNode,\n                childNodes,\n                [],\n                diffOptions\n              );\n            }\n          } else {\n            switch (typeof value[0]) {\n              case 'string':\n              case 'number':\n              case 'boolean':\n                anyContent({html: value});\n                break;\n              case 'object':\n                if (isArray(value[0])) {\n                  value = value.concat.apply([], value);\n                }\n                if (isPromise_ish(value[0])) {\n                  Promise.all(value).then(anyContent);\n                  break;\n                }\n              default:\n                childNodes = domdiff(\n                  node.parentNode,\n                  childNodes,\n                  value,\n                  diffOptions\n                );\n                break;\n            }\n          }\n        } else if (canDiff(value)) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            value.nodeType === DOCUMENT_FRAGMENT_NODE ?\n              slice.call(value.childNodes) :\n              [value],\n            diffOptions\n          );\n        } else if (isPromise_ish(value)) {\n          value.then(anyContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, anyContent);\n        } else if ('text' in value) {\n          anyContent(String(value.text));\n        } else if ('any' in value) {\n          anyContent(value.any);\n        } else if ('html' in value) {\n          childNodes = domdiff(\n            node.parentNode,\n            childNodes,\n            slice.call(\n              createFragment(\n                node,\n                [].concat(value.html).join('')\n              ).childNodes\n            ),\n            diffOptions\n          );\n        } else if ('length' in value) {\n          anyContent(slice.call(value));\n        } else {\n          anyContent(Intent.invoke(value, anyContent));\n        }\n        break;\n    }\n  };\n  return anyContent;\n};\n\n// there are four kind of attributes, and related behavior:\n//  * events, with a name starting with `on`, to add/remove event listeners\n//  * special, with a name present in their inherited prototype, accessed directly\n//  * regular, accessed through get/setAttribute standard DOM methods\n//  * style, the only regular attribute that also accepts an object as value\n//    so that you can style=${{width: 120}}. In this case, the behavior has been\n//    fully inspired by Preact library and its simplicity.\nconst setAttribute = (node, name, original) => {\n  const isSVG = OWNER_SVG_ELEMENT in node;\n  let oldValue;\n  // if the attribute is the style one\n  // handle it differently from others\n  if (name === 'style') {\n    return Style(node, original, isSVG);\n  }\n  // the name is an event one,\n  // add/remove event listeners accordingly\n  else if (/^on/.test(name)) {\n    let type = name.slice(2);\n    if (type === CONNECTED || type === DISCONNECTED) {\n      if (notObserving) {\n        notObserving = false;\n        observe();\n      }\n      components.add(node);\n    }\n    else if (name.toLowerCase() in node) {\n      type = type.toLowerCase();\n    }\n    return newValue => {\n      if (oldValue !== newValue) {\n        if (oldValue) node.removeEventListener(type, oldValue, false);\n        oldValue = newValue;\n        if (newValue) node.addEventListener(type, newValue, false);\n      }\n    };\n  }\n  // the attribute is special ('value' in input)\n  // and it's not SVG *or* the name is exactly data,\n  // in this case assign the value directly\n  else if (\n    name === 'data' ||\n    (!isSVG && name in node && !readOnly.test(name))\n  ) {\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (node[name] !== newValue) {\n          node[name] = newValue;\n          if (newValue == null) {\n            node.removeAttribute(name);\n          }\n        }\n      }\n    };\n  }\n  else if (name in Intent.attributes) {\n    return any => {\n      oldValue = Intent.attributes[name](node, any);\n      node.setAttribute(name, oldValue == null ? '' : oldValue);\n    };\n  }\n  // in every other case, use the attribute node as it is\n  // update only the value, set it as node only when/if needed\n  else {\n    let owner = false;\n    const attribute = original.cloneNode(true);\n    return newValue => {\n      if (oldValue !== newValue) {\n        oldValue = newValue;\n        if (attribute.value !== newValue) {\n          if (newValue == null) {\n            if (owner) {\n              owner = false;\n              node.removeAttributeNode(attribute);\n            }\n            attribute.value = newValue;\n          } else {\n            attribute.value = newValue;\n            if (!owner) {\n              owner = true;\n              node.setAttributeNode(attribute);\n            }\n          }\n        }\n      }\n    };\n  }\n};\n\n// style or textareas don't accept HTML as content\n// it's pointless to transform or analyze anything\n// different from text there but it's worth checking\n// for possible defined intents.\nconst setTextContent = node => {\n  let oldValue;\n  const textContent = value => {\n    if (oldValue !== value) {\n      oldValue = value;\n      const type = typeof value;\n      if (type === 'object' && value) {\n        if (isPromise_ish(value)) {\n          value.then(textContent);\n        } else if ('placeholder' in value) {\n          invokeAtDistance(value, textContent);\n        } else if ('text' in value) {\n          textContent(String(value.text));\n        } else if ('any' in value) {\n          textContent(value.any);\n        } else if ('html' in value) {\n          textContent([].concat(value.html).join(''));\n        } else if ('length' in value) {\n          textContent(slice.call(value).join(''));\n        } else {\n          textContent(Intent.invoke(value, textContent));\n        }\n      } else if (type === 'function') {\n        textContent(value(node));\n      } else {\n        node.textContent = value == null ? '' : value;\n      }\n    }\n  };\n  return textContent;\n};\n\nexport default {create, find};\n\n// hyper.Components might need connected/disconnected notifications\n// used by components and their onconnect/ondisconnect callbacks.\n// When one of these callbacks is encountered,\n// the document starts being observed.\nlet notObserving = true;\nfunction observe() {\n\n  // when hyper.Component related DOM nodes\n  // are appended or removed from the live tree\n  // these might listen to connected/disconnected events\n  // This utility is in charge of finding all components\n  // involved in the DOM update/change and dispatch\n  // related information to them\n  const dispatchAll = (nodes, type) => {\n    const event = new Event(type);\n    const length = nodes.length;\n    for (let i = 0; i < length; i++) {\n      let node = nodes[i];\n      if (node.nodeType === ELEMENT_NODE) {\n        dispatchTarget(node, event);\n      }\n    }\n  };\n\n  // the way it's done is via the components weak set\n  // and recursively looking for nested components too\n  const dispatchTarget = (node, event) => {\n    if (components.has(node)) {\n      node.dispatchEvent(event);\n    }\n\n    /* istanbul ignore next */\n    const children = node.children || getChildren(node);\n    const length = children.length;\n    for (let i = 0; i < length; i++) {\n      dispatchTarget(children[i], event);\n    }\n  }\n\n  // The MutationObserver is the best way to implement that\n  // but there is a fallback to deprecated DOMNodeInserted/Removed\n  // so that even older browsers/engines can help components life-cycle\n  try {\n    (new MutationObserver(records => {\n      const length = records.length;\n      for (let i = 0; i < length; i++) {\n        let record = records[i];\n        dispatchAll(record.removedNodes, DISCONNECTED);\n        dispatchAll(record.addedNodes, CONNECTED);\n      }\n    })).observe(document, {subtree: true, childList: true});\n  } catch(o_O) {\n    document.addEventListener('DOMNodeRemoved', event => {\n      dispatchAll([event.target], DISCONNECTED);\n    }, false);\n    document.addEventListener('DOMNodeInserted', event => {\n      dispatchAll([event.target], CONNECTED);\n    }, false);\n  }\n}\n","import {Map, WeakMap} from '../shared/poorlyfills.js';\nimport {G, UIDC, VOID_ELEMENTS} from '../shared/constants.js';\nimport Updates from '../objects/Updates.js';\nimport {\n  createFragment,\n  importNode,\n  unique,\n  TemplateMap\n} from '../shared/utils.js';\n\nimport {selfClosing} from '../shared/re.js';\n\n// a weak collection of contexts that\n// are already known to hyperHTML\nconst bewitched = new WeakMap;\n\n// all unique template literals\nconst templates = TemplateMap();\n\n// better known as hyper.bind(node), the render is\n// the main tag function in charge of fully upgrading\n// or simply updating, contexts used as hyperHTML targets.\n// The `this` context is either a regular DOM node or a fragment.\nfunction render(template) {\n  const wicked = bewitched.get(this);\n  if (wicked && wicked.template === unique(template)) {\n    update.apply(wicked.updates, arguments);\n  } else {\n    upgrade.apply(this, arguments);\n  }\n  return this;\n}\n\n// an upgrade is in charge of collecting template info,\n// parse it once, if unknown, to map all interpolations\n// as single DOM callbacks, relate such template\n// to the current context, and render it after cleaning the context up\nfunction upgrade(template) {\n  template = unique(template);\n  const info =  templates.get(template) ||\n                createTemplate.call(this, template);\n  const fragment = importNode(this.ownerDocument, info.fragment);\n  const updates = Updates.create(fragment, info.paths);\n  bewitched.set(this, {template, updates});\n  update.apply(updates, arguments);\n  this.textContent = '';\n  this.appendChild(fragment);\n}\n\n// an update simply loops over all mapped DOM operations\nfunction update() {\n  const length = arguments.length;\n  for (let i = 1; i < length; i++) {\n    this[i - 1](arguments[i]);\n  }\n}\n\n// a template can be used to create a document fragment\n// aware of all interpolations and with a list\n// of paths used to find once those nodes that need updates,\n// no matter if these are attributes, text nodes, or regular one\nfunction createTemplate(template) {\n  const paths = [];\n  const html = template.join(UIDC).replace(SC_RE, SC_PLACE);\n  const fragment = createFragment(this, html);\n  Updates.find(fragment, paths, template.slice());\n  const info = {fragment, paths};\n  templates.set(template, info);\n  return info;\n}\n\n// some node could be special though, like a custom element\n// with a self closing tag, which should work through these changes.\nconst SC_RE = selfClosing;\nconst SC_PLACE = ($0, $1, $2) => {\n  return VOID_ELEMENTS.test($1) ? $0 : ('<' + $1 + $2 + '></' + $1 + '>');\n};\n\nexport default render;\n","import {ELEMENT_NODE, SVG_NAMESPACE} from '../shared/constants.js';\nimport {WeakMap, trim} from '../shared/poorlyfills.js';\nimport {fragment} from '../shared/easy-dom.js';\nimport {append, slice, unique} from '../shared/utils.js';\nimport Wire from '../classes/Wire.js';\nimport render from './render.js';\n\n// all wires used per each context\nconst wires = new WeakMap;\n\n// A wire is a callback used as tag function\n// to lazily relate a generic object to a template literal.\n// hyper.wire(user)`<div id=user>${user.name}</div>`; => the div#user\n// This provides the ability to have a unique DOM structure\n// related to a unique JS object through a reusable template literal.\n// A wire can specify a type, as svg or html, and also an id\n// via html:id or :id convention. Such :id allows same JS objects\n// to be associated to different DOM structures accordingly with\n// the used template literal without losing previously rendered parts.\nconst wire = (obj, type) => obj == null ?\n  content(type || 'html') :\n  weakly(obj, type || 'html');\n\n// A wire content is a virtual reference to one or more nodes.\n// It's represented by either a DOM node, or an Array.\n// In both cases, the wire content role is to simply update\n// all nodes through the list of related callbacks.\n// In few words, a wire content is like an invisible parent node\n// in charge of updating its content like a bound element would do.\nconst content = type => {\n  let wire, container, content, template, updates;\n  return function (statics) {\n    statics = unique(statics);\n    let setup = template !== statics;\n    if (setup) {\n      template = statics;\n      content = fragment(document);\n      container = type === 'svg' ?\n        document.createElementNS(SVG_NAMESPACE, 'svg') :\n        content;\n      updates = render.bind(container);\n    }\n    updates.apply(null, arguments);\n    if (setup) {\n      if (type === 'svg') {\n        append(content, slice.call(container.childNodes));\n      }\n      wire = wireContent(content);\n    }\n    return wire;\n  };\n};\n\n// wires are weakly created through objects.\n// Each object can have multiple wires associated\n// and this is thanks to the type + :id feature.\nconst weakly = (obj, type) => {\n  const i = type.indexOf(':');\n  let wire = wires.get(obj);\n  let id = type;\n  if (-1 < i) {\n    id = type.slice(i + 1);\n    type = type.slice(0, i) || 'html';\n  }\n  if (!wire) wires.set(obj, wire = {});\n  return wire[id] || (wire[id] = content(type));\n};\n\n// a document fragment loses its nodes as soon\n// as it's appended into another node.\n// This would easily lose wired content\n// so that on a second render call, the parent\n// node wouldn't know which node was there\n// associated to the interpolation.\n// To prevent hyperHTML to forget about wired nodes,\n// these are either returned as Array or, if there's ony one entry,\n// as single referenced node that won't disappear from the fragment.\n// The initial fragment, at this point, would be used as unique reference.\nconst wireContent = node => {\n  const childNodes = node.childNodes;\n  const length = childNodes.length;\n  const wireNodes = [];\n  for (let i = 0; i < length; i++) {\n    let child = childNodes[i];\n    if (\n      child.nodeType === ELEMENT_NODE ||\n      trim.call(child.textContent).length !== 0\n    ) {\n      wireNodes.push(child);\n    }\n  }\n  return wireNodes.length === 1 ? wireNodes[0] : new Wire(wireNodes);\n};\n\nexport { content, weakly };\nexport default wire;\n","/*! (c) Andrea Giammarchi (ISC) */\n\nimport Component, {setup} from './classes/Component.js';\nimport Intent from './objects/Intent.js';\nimport wire, {content, weakly} from './hyper/wire.js';\nimport render from './hyper/render.js';\nimport diff from './3rd/domdiff.js';\n\n// all functions are self bound to the right context\n// you can do the following\n// const {bind, wire} = hyperHTML;\n// and use them right away: bind(node)`hello!`;\nconst bind = context => render.bind(context);\nconst define = Intent.define;\n\nhyper.Component = Component;\nhyper.bind = bind;\nhyper.define = define;\nhyper.diff = diff;\nhyper.hyper = hyper;\nhyper.wire = wire;\n\n// the wire content is the lazy defined\n// html or svg property of each hyper.Component\nsetup(content);\n\n// everything is exported directly or through the\n// hyperHTML callback, when used as top level script\nexport {Component, bind, define, diff, hyper, wire};\n\n// by default, hyperHTML is a smart function\n// that \"magically\" understands what's the best\n// thing to do with passed arguments\nexport default function hyper(HTML) {\n  return arguments.length < 2 ?\n    (HTML == null ?\n      content('html') :\n      (typeof HTML === 'string' ?\n        hyper.wire(null, HTML) :\n        ('raw' in HTML ?\n          content('html')(HTML) :\n          ('nodeType' in HTML ?\n            hyper.bind(HTML) :\n            weakly(HTML, 'html')\n          )\n        )\n      )) :\n    ('raw' in HTML ?\n      content('html') : hyper.wire\n    ).apply(null, arguments);\n}\n","import hyperHTML from 'hyperhtml';\nimport avatar from './css/avatar.jpg';\n\nexport function Page(data) {\n  const { header, experience, languages, links, skillsetURL } = data;\n  return hyperHTML.wire()`\n    <div class=\"wrapper\">\n      ${Header(header)}\n      ${Experience(experience)}\n      ${Skillset(skillsetURL)}\n      ${Languages(languages)}\n      ${Links(links)}\n    </div>\n  `;\n}\n\nfunction Header(head) {\n  return hyperHTML.wire()`\n    <section id=\"personal-info\">\n      <header>\n        <div class=\"avatar\">\n          <img src=\"${avatar}\" alt=\"Andrea Puddu\">\n        </div>\n      </header>\n      <div class=\"head\">\n        ${{html: head}}\n      </div>\n    </section>\n  `;\n}\n\nfunction Experience(experience) {\n  return hyperHTML.wire(experience, ':experience')`\n    <section id=\"experience\">\n      <h2 class=\"title\">Experience</h2>\n      <ul class=\"experience\">\n      ${experience.map((e) => hyperHTML.wire(e)`\n        <li>\n          <h3>${e.position}</h3>\n          <h4>${e.company}</h4>\n          <em class=\"duration\" title=${e.period.duration}>\n            ${`${e.period.start} - ${e.period.end}`}\n          </em> - ${e.period.location}\n          ${{html: `<p>${e.description}</p>` }}\n        </li>\n      `)}\n      </ul>\n    </section>\n  `;\n}\n\nfunction Skillset(skillsetURL) {\n  // GET skillset from GitHub gist\n  let skillsetRaw = '';\n  return hyperHTML.wire()`\n    <section id=\"skillset\">\n      <h2 class=\"title\">Skillset</h2>\n      <ul class=\"skillset\">\n      ${{\n        any: fetch(skillsetURL)\n            .then((response) => response.body.getReader().read())\n            .then((result) => {\n              const decoder = new TextDecoder();\n              skillsetRaw += decoder.decode(result.value || new Uint8Array, {\n                stream: !result.done\n              });\n              return skillsetRaw.split('\\n');\n            })\n            .then((skills) => skills.map((skill) => hyperHTML.wire()`<li>${skill}</li>`)),\n        placeholder: 'Loading…',\n      }}\n      </ul>\n    </section>\n  `;\n}\n\nfunction Languages(languages) {\n  return hyperHTML.wire()`\n    <section id=\"languages\">\n      <h2 class=\"title\">Languages</h2>\n      <p>${languages.join(', ')}</p>\n    </section>\n  `;\n}\n\nfunction Links(links) {\n  return hyperHTML.wire()`\n    <section id=\"links\">\n      <h2 class=\"title\">Follow me on</h2>\n      ${links.map((a) => hyperHTML.wire(a)`<a href=${a.href} title=${a.title} target=\"_blank\">${a.title}</a>`)}\n    </section>\n  `;\n}\n","// https://gist.github.com/nuragic/ff9ee6212a6d335627e1fd17a81e8991\nfunction getDuration(start) {\n  const totalMonths = Math.floor((new Date() - new Date(start)) / 1000 / 60 / 60 / 24 / 30);\n  const months = totalMonths < 12 ? totalMonths : totalMonths % 12;\n  const years = Math.floor(totalMonths / 12);\n  let duration = '';\n\n  if (years === 0)\n    if (months > 0)\n      duration = `${months} months`;\n  if (years > 0)\n    if (months === 0)\n      duration = `${years} years`;\n    else\n      duration = `${years} years, ${months} months`;\n\n  return `(${duration})`;\n};\n\nconst experience = [\n  {\n    \"position\":\"Head of Front-end and UX\",\n    \"company\":\"GlobalAVL\",\n    \"period\":{\n      \"start\":\"May 2018\",\n      \"end\":\"Present\",\n      get duration() {\n        return getDuration(this.start);\n      },\n      \"location\":\"Madrid\"\n    },\n    \"description\":\"Leading the UI effort on building the next generation <strong>real-time fleet management software</strong> using <strong>React</strong>, <strong>GraphQL</strong>, <strong>Node.js</strong>, Geographic Information Systems, and more related exciting technologies such as RabbitMQ, Thrift, RTDB, Elastic Search, etc.\"\n  },\n  {\n    \"position\":\"Senior Front-end Developer / Front-end Lead\",\n    \"company\":\"NEORIS\",\n    \"period\":{\n      \"start\":\"August 2015\",\n      \"end\":\"April 2018\",\n      \"duration\":\"(2 years, 9 months)\",\n      \"location\":\"Madrid\"\n    },\n    \"description\":\"Crafting UIs for large scale web applications using <strong>JavaScript (ES6+)</strong>, <strong>React</strong>, <strong>Redux</strong>, <strong>Angular</strong>, <strong>WebPack</strong>, <strong>Node.js</strong>, etc. In charge of <strong>architecture</strong>, <strong>analysis</strong>, <strong>performance</strong>, <strong>mentorship</strong>, <strong>code review</strong>, <strong>development workflow</strong>, establishing <strong>best practices</strong> and <strong>guidelines</strong>, and more generally <em>continuously improving</em> <strong>UX</strong> and <strong>DX</strong>.\"\n  },\n  {\n    \"position\":\"Front-end Lead Engineer\",\n    \"company\":\"Critizen\",\n    \"period\":{\n      \"start\":\"May 2015\",\n      \"end\":\"July 2015\",\n      \"duration\":\"(3 months)\",\n      \"location\":\"Madrid\"\n    },\n    \"description\":\"Building the new front-end web architecture from scratch using the last cutting-edge technologies and techniques such as <strong>ES6</strong>, <strong>React</strong>, <strong>WebPack</strong>, <strong>NodeJS</strong>, <strong>Isomorphic/Universal JavaScript</strong> and <strong>Flux</strong>.\"\n  },\n  {\n    \"position\":\"Senior Front-end developer\",\n    \"company\":\"BABEL\",\n    \"period\":{\n      \"start\":\"February 2014\",\n      \"end\":\"April 2015\",\n      \"duration\":\"(1 year, 3 months)\",\n      \"location\":\"Madrid\"\n    },\n    \"description\":\"Enhancing performance and architecture of the brand new multi-device banking platform for <strong>ING Direct Spain</strong>. <strong>HTML5</strong>, <strong>CSS3</strong> (<strong>Stylus</strong>, <strong>RWD</strong>), <strong>JavaScript</strong> (<strong>Backbone</strong>, <strong>Marionette</strong>, <strong>RequireJS</strong>, <strong>NodeJS</strong>, <strong>Grunt</strong>).\"\n  },\n  {\n    \"position\":\"Front-end developer\",\n    \"company\":\"ADESIS Netlife\",\n    \"period\":{\n      \"start\":\"September 2013\",\n      \"end\":\"January 2014\",\n      \"duration\":\"(5 months)\",\n      \"location\":\"Madrid\"\n    },\n    \"description\":\"Web apps development with <strong>HTML5</strong>, <strong>CSS3</strong> (<strong>Compass</strong>, <strong>Responsive Web Design</strong>), <strong>JavaScript</strong> (<strong>AngularJS</strong>, <strong>NodeJS,</strong> <strong>Yeoman</strong>, <strong>Grunt</strong>), <strong>Git</strong> and more.\"\n  },\n  {\n    \"position\":\"Front-end developer\",\n    \"company\":\"Tutellus\",\n    \"period\":{\n      \"start\":\"May 2013\",\n      \"end\":\"August 2013\",\n      \"duration\":\"(4 months)\",\n      \"location\":\"Madrid\"\n    },\n    \"description\":\"Boosting User Interface to the next level with <strong>HTML5</strong>, <strong>CSS3</strong> and <strong>JavaScript</strong> (<strong>Backbone</strong>, <strong>Marionette</strong>, <strong>RequireJS</strong>, <strong>jQuery</strong>, <strong>NodeJS</strong>)\"\n  },\n  {\n    \"position\":\"Front-end developer\",\n    \"company\":\"AURIGAE\",\n    \"period\":{\n      \"start\":\"January 2013\",\n      \"end\":\"April 2013\",\n      \"duration\":\"(4 months)\",\n      \"location\":\"Madrid\"\n    },\n    \"description\":\"Developing cross-platform web applications with <strong>HTML5</strong>. The <strong>JavaScript</strong> stack includes <strong>Backbone</strong>, <strong>Marionette</strong>, <strong>jQuery</strong>, <strong>jQuery Mobile</strong>, <strong>underscore</strong>, <strong>RequireJS</strong>, <strong>PhoneGap</strong>, etc.\"\n  },\n  {\n    \"position\":\"Front-end Team Leader\",\n    \"company\":\"Media Net Software\",\n    \"period\":{\n      \"start\":\"February 2012\",\n      \"end\":\"January 2013\",\n      \"duration\":\"(1 year)\",\n      \"location\":\"Madrid\"\n    },\n    \"description\":\"Working on the new website of <strong>BBVA bank</strong> (launched on April, 2013). Writing <strong>HTML5</strong>, <strong>CSS3</strong> (<strong>SASS</strong>), modular <strong>JavaScript</strong> APIs (<strong>Backbone</strong>, <strong>underscore</strong>, <strong>jQuery</strong> &amp; more).\"\n  },\n  {\n    \"position\":\"Web developer\",\n    \"company\":\"Ticketea\",\n    \"period\":{\n      \"start\":\"July 2010\",\n      \"end\":\"January 2012\",\n      \"duration\":\"(1 year 7 months)\",\n      \"location\":\"Madrid\"\n    },\n    \"description\":\"Building the product from scratch using <strong>SCRUM</strong>, <strong>TDD</strong>, <strong>LAMP</strong>, <strong>JavaScript</strong> (<strong>jQuery</strong>), <strong>XHTML</strong>, <strong>CSS</strong>, <strong>Git</strong>. Integrations with affiliates, <strong>Google and Facebook APIs</strong>.\"\n  },\n  {\n    \"position\":\"Web developer\",\n    \"company\":\"Comunica+A\",\n    \"period\":{\n      \"start\":\"May 2009\",\n      \"end\":\"June 2010\",\n      \"duration\":\"(1 year 2 months)\",\n      \"location\":\"Madrid\"\n    },\n    \"description\":\"Websites for clients such as Orange, Endesa, MRW, McDonalds, Wilkinson, Alfa Romeo, Lancia, Real Madrid FC, entradas.com, Mutua Madrile&#xf1;a, la Caixa, red.es, AECEM, etc. <strong>LAMP</strong>, <strong>XHTML</strong>, <strong>CSS</strong>, <strong>JavaScript</strong>.\"\n  },\n  {\n    \"position\":\"Web developer\",\n    \"company\":\"Arionline s.r.l.\",\n    \"period\":{\n      \"start\":\"2007\",\n      \"end\":\"2009\",\n      \"duration\":\"(2 years)\",\n      \"location\":\"Cagliari Area, Italy\"\n    },\n    \"description\":\"Software programming, R&amp;D projects, web apps, with <strong>Open Source</strong> technology: <strong>PHP</strong> (<strong>Joomla</strong>), <strong>HTML</strong>, <strong>CSS</strong>, <strong>JavaScript</strong> (<strong>jQuery</strong>).\"\n  }\n];\n\nconst data = {\n  header: `<p>Spaghetti code hater, lasagna eater, <i>rock and roll</i> driven <strong>web developer</strong>. Born and raised in <i>Sardinia</i>.</p><p>🇮🇹⛱☀️🐑🦀🍷🍝</p>`,\n  experience,\n  skillsetURL: 'https://gist.githubusercontent.com/nuragic/7bece2b662a7d98f6b15e3b36143f811/raw',\n  languages: [\n    'Italian', 'Spanish', 'English', 'Sardinian',\n  ],\n  links: [\n    { href: \"https://github.com/nuragic\", title: \"Github\" },\n    { href: \"https://twitter.com/nuragic\", title: \"Twitter\" },\n    { href: \"https://medium.com/@nuragic\", title: \"Medium\" },\n    { href: \"https://linkedin.com/in/nuragic\", title: \"LinkedIn\" },\n    { href: \"https://stackoverflow.com/story/nuragic\", title: \"StackOverflow\" },\n    { href: \"https://theancientsecretsoflevitation.bandcamp.com/\", title: \"Bandcamp\" },\n  ],\n};\n\nexport default data;\n","import hyperHTML from 'hyperhtml';\nimport { Page } from './components.js';\nimport data from './data.js';\n\nconst rootElement = document.getElementById('root');\nconst page = Page(data);\n\nhyperHTML.bind(rootElement)`${page}`;\n"]}